group 'com.min.gradle'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.5

jar {
    manifest {
        attributes 'Main-Class': 'com.min.gradle.App'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task getRootProjectExtValues << {
    println "versionCode=${rootProject.ext.versionCode}"
    println "versionName=${rootProject.ext.versionName}"
}

task getRootProjectProperites << {
    println RELEASE_STORE_FILE
}

task copyResultPackageToDestDir << {
    def sourceFile = getLastModifyFileInDir('E:\\IdeaProjects\\hello-gradle\\child-one\\build\\libs')
    if (sourceFile) {
        def dst = new File("F:\\test_dir\\dest\\${sourceFile.getName()}")
        dst << sourceFile.bytes
        Process p = "cmd /c start call F:\\test_dir\\commit.bat".execute()
//        println "${p.text}"
    }
}

def getLastModifyFileInDir(dirPath) {
    def srcDirFile = new File(dirPath)
    if (srcDirFile.isDirectory()) {
        def fileArr = srcDirFile.listFiles()
        def sortFileArr = fileArr.sort { a, b ->
            b.lastModified() - a.lastModified()
        }
//        sortFileArr.each {
//            println it.getAbsolutePath()
//        }
        return sortFileArr[0]
    }
    return null
}

int getVersionCodeByName(String versionName) {
    def arr = versionName.split('\\.')
    return Integer.parseInt(arr[0]) * 10 * 10 + Integer.parseInt(arr[1]) * 10 + Integer.parseInt(arr[2])
}

//==============task 依赖关系==================

task myTask {
    println "myTask configure step"
    doLast {
        println "execute step"
    }
}

task A << {
    println "A..."
}

task B << {
    println "B..."
}

task C << {
    println "C..."
}

B.dependsOn A
C.dependsOn B

task B1 << {
    println "B1..."
}

B1.dependsOn B
C.dependsOn B1

task unit << { println 'Hello from unit tests' }
task ui << { println 'Hello from UI tests' }
task tests << { println 'Hello from all tests!' }

tests.dependsOn unit
tests.dependsOn ui

task unit1 << { println 'Hello from unit tests' }
task ui1 << { println 'Hello from UI tests' }
task tests1 << { println 'Hello from all tests!' }
task mergeReports1 << { println 'Merging test reports' }

tests1.dependsOn unit1
tests1.dependsOn ui1
ui1.mustRunAfter unit1
mergeReports1.dependsOn tests1

tests1.finalizedBy mergeReports1

//===============闭包=================

def myClosure = { str, num -> println "$str : $num" }
task testClosure << {
    myClosure('my string', 21)
}

//=================cmd===============

task testCmd << {
    Process p="cmd /c dir".execute();
    println p.text
}

//================sh==================

task testSh << {
    Process p="ls".execute();
    println p.text
}

def isWindows() {
    return System.properties['os.name'].toString().toLowerCase().contains('windows');
}
